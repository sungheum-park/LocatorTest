<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.2.xsd
			http://www.springframework.org/schema/tx
		  	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	   		http://www.springframework.org/schema/security
			http://www.springframework.org/schema/security/spring-security-4.1.xsd">

    <!--<mvc:annotation-driven />-->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
        </mvc:argument-resolvers>
        <mvc:message-converters>
            <!-- @ResponseBody로 String 처리할때 한글처리 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <context:component-scan base-package="kr.co.msync.web.module" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- @Secured 어노테이션을 사용 Class나 Method 단위까지 지정권한이 필요한 부분에 선언 할 수 있음 -->
    <!--<security:global-method-security secured-annotations="enabled"/>-->

    <!-- RequestMappingHandlerMapping -->
    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="alwaysUseFullPath" value="true"/>
    </bean>

    <!-- Validation Check -->
    <bean id="localValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

    <!-- Resources Mapping -->
    <!--
        [web.xml] servlet에 대한 url-pattern을 '/' 설정할 경우 모든 요청을 DispatcherServlet이 처리 한다. 따라서 정적자원에 대한 경로를 찾지 못함.
        DispatcherServlet에서 경로를 찾지 못할 경우 mvc:resources에 지정되어 있는 자원에 대해 매핑 작업을 해준다.
        cache-period 시간 정의 필요
    -->
    <mvc:resources mapping="/resources/**" location="/resources/" cache-period="36346341"/>
    <mvc:resources mapping="/upload/**" location="/upload/" cache-period="36346341"/>

    <!--SEO설정파일-->
    <mvc:resources mapping="/robots.txt" location="/resources/static/robots.txt" />
    <mvc:resources mapping="/sitemap.xml" location="/resources/static/sitemap.xml" />
    <mvc:resources mapping="/naver729addbb4fcb4022075a526cce229194.html" location="/resources/static/naver729addbb4fcb4022075a526cce229194.html" />
    <mvc:resources mapping="/google50ab3f4bcd2c7920.html" location="/resources/static/google50ab3f4bcd2c7920.html" />

    <bean id="tilesConfigurer" class = "org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>classpath*:tiles/tiles-def.xml</value>
            </list>
        </property>
    </bean>

    <!-- ========================= Content Negotiating View Resolver ======================== -->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager">
            <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
                <property name="mediaTypes">
                    <value>
                        pm=text/html;charset=UTF-8
                        json=application/json;charset=UTF-8
                    </value>
                </property>
            </bean>
        </property>
        <property name="viewResolvers">
            <list>
                &lt;!&ndash; ========================= BeanNameViewResolver ======================== &ndash;&gt;
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
                    <property name="order" value="1"/>
                </bean>
                &lt;!&ndash; ========================= UrlBasedViewResolver ======================== &ndash;&gt;
                <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                    <property name="order" value="2"/>
                    <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                &lt;!&ndash; ========================= MappingJackson2JsonView ======================== &ndash;&gt;
                <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                    &lt;!&ndash;<property name="modelKey" value="baseJsonVO"/>
                    <property name="extractValueFromSingleKeyModel" value="true"/>&ndash;&gt;
                    <property name="contentType" value="application/json;charset=UTF-8" />
                </bean>
            </list>
        </property>
    </bean>

    &lt;!&ndash; Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory &ndash;&gt;
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="3"/>
        <property name="prefix" value="/WEB-INF/views/module" />
        <property name="suffix" value=".jsp" />
    </bean>-->
    <!-- ========================= BeanNameViewResolver ======================== -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="1"/>
    </bean>
    <!-- ========================= UrlBasedViewResolver ======================== -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="order" value="2"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
    </bean>
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
        <!--<property name="modelKey" value="baseJsonVO"/>
        <property name="extractValueFromSingleKeyModel" value="true"/>-->
        <property name="contentType" value="application/json;charset=UTF-8" />
    </bean>
    <!-- ========================= Message Converter ======================== -->
    <!--<bean id="htmlEscapingObjectMapper" class="kr.co.msync.web.base.messageConverter.HtmlEscapingObjectMapperFactory" />-->
    <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- ========================= 특정 url만 캐시사용안함 (만료 시킴) ======================== -->

</beans>